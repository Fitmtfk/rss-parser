name: Lint and test

on:
  schedule:
    - cron: "0 0 1 * *"
  push:
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/ci.yml"
      - ".gitignore"
      - "README.md"
  pull_request:

jobs:
  build:
    strategy:
      max-parallel: 6
      matrix:
        # TODO: Add cli to parse to json
        # TODO: Possibly bundle as deb/rpm/exe
        os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
        python-version: [ "3.8", "3.9", "3.10", "3.11"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache-dependency-path: pyproject.toml
          cache: poetry

      - name: Install dependencies
        if: steps.setup-python.outputs.cache-hit != 'true'
        run: poetry install

      - name: Lint code with black
        run: poetry run black --check .

      - name: Lint code with isort
        run: poetry run ruff check .

      - name: Test code with pytest
        run: poetry run pytest
